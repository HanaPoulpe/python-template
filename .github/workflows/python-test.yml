name: Python Tests
run-name: python-test
'on':
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
jobs:
  ruff:
    container: python:3.12-slim-bookworm
    if: ${{ github.event_name == 'pull_request' }}
    name: 'Python linter: ruff'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      uses: ./.github/actions/build
    - id: file-changed
      name: File changed
      uses: tj-actions/changed-files@v44
      with:
        files: '**/*.py'
    - id: run-ruff
      if: ${{ steps.file-changed.outputs.any_changed == 'true' }}
      name: Run ruff
      run: poetry run python-ruff ${{ steps.file-changed.outputs.all_changed_files
        }}
  lock:
    container: python:3.12-slim-bookworm
    if: ${{ github.event_name == 'pull_request' }}
    name: 'Python linter: poetry lock check'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      uses: ./.github/actions/build
    - id: run-lock
      name: Run poetry lock check
      run: poetry lock --check
  mypy:
    container: python:3.12-slim-bookworm
    if: ${{ github.event_name == 'pull_request' }}
    name: 'Python linter: mypy'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      uses: ./.github/actions/build
    - id: file-changed
      name: File changed
      uses: tj-actions/changed-files@v44
      with:
        files: '**/*.py'
    - id: run-mypy
      name: Run mypy
      run: poetry run python-type-check ${{ steps.file-changed.outputs.all_changed_files
        }}
  pytest:
    container: python:3.12-slim-bookworm
    name: 'Python test: pytest'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      uses: ./.github/actions/build
    - id: run-pytest
      name: Run pytest
      run: poetry run python-test-suite pytest
  coverage:
    container: python:3.12-slim-bookworm
    name: 'Python test: coverage'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      uses: ./.github/actions/build
    - id: file-changed
      name: File changed
      uses: tj-actions/changed-files@v44
      with:
        files: '**/*.py'
    - id: run-coverage
      name: Run coverage
      run: 'poetry run python-coverage '
    - id: upload-coverage
      name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: 'true'
        files: coverage/report.xml
        verbose: 'true'
  python-tests-passed:
    container: python:3.12-slim-bookworm
    env:
      RESULTS: |-
        ${{ needs.ruff.result =='success' }}
        ${{ needs.lock.result =='success' }}
        ${{ needs.mypy.result =='success' }}
    if: ${{ always() }}
    name: 'Python test: OK'
    needs:
    - ruff
    - lock
    - mypy
    runs-on: ubuntu-latest
    steps:
    - id: test-results
      name: Test results
      run: |-
        echo ${{ RESULTS }}
        for r in $RESULTS
        do
            if [ $r = "success" ] || [ $r = "skipped" ];
            then
                true
            else
                echo "Some tests failed"
                exit 1
            fi
        done
        echo "All tests passed"
